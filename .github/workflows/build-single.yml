name: Build Container

on:
  workflow_dispatch:
    inputs:
      server:
        required: true
        type: string

  workflow_call:
    inputs:
      server:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  get-version:
    name: Get Latest Version

    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Install packages
        run: bun i

      - name: Get Version
        working-directory: 'scripts/build'
        id: get-version
        run: |
          bun start get-latest-version ${{ inputs.server }} > version.txt
          echo "Version: $(cat version.txt)"
          echo "::set-output name=version::$(cat version.txt)"

  build:
    name: Build Container "${{ inputs.server }}"

    needs: get-version

    strategy:
      matrix:
        platform:
          - ubuntu-24.04
          - ubuntu-24.04-arm

    runs-on: ${{ matrix.platform }}

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Nixpacks
        run: curl -sSL https://nixpacks.com/install.sh | bash

      - name: Install packages
        run: bun i

      - name: Build MCP Server
        run: bun start ci ${{ inputs.server }} ${{ needs.get-version.outputs.version }} --platform ${{ matrix.platform == 'ubuntu-24.04-arm' && 'linux/arm64' || 'linux/amd64' }}
        working-directory: 'scripts/build'

  publish:
    name: Publish Container "${{ inputs.server }}"

    needs:
      - build
      - get-version

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install packages
        run: bun i

      - name: Publish MCP Server
        run: bun start ci-publish ${{ inputs.server }} ${{ needs.get-version.outputs.version }}
        working-directory: 'scripts/build'
